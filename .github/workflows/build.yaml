name: Sync Repositories 

on:
  workflow_dispatch

jobs:
  tests:
    runs-on: [self-hosted, Linux]

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: main
          fetch-depth: 1

      - name: Use Node.js v22.11
        uses: actions/setup-node@v3
        with:
          node-version: 22.11
          cache: ''

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test


  sync:
    runs-on: self-hosted
    needs: tests

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: main
          fetch-depth: 1
      
      - name: Fetch all necessary refs
        run: |
          git fetch --unshallow  # This will fetch the remaining refs without fetching full history
          git fetch origin main  # Fetch additional references, like the latest commit from 'main'


      - name: Remove .github folder to avoid copying workflows
        run: |
            git rm -r --cached .github 
            git commit -m "Remove .github folder"

      - name: Setup SSH
        run: |
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/ghActionsTest
          chmod 600 ~/.ssh/ghActionsTest
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Push to destination repository
        run: |
          git remote set-url origin git@github.com:HajMichal/GithubActionsTesting.git
          git push origin main        
        # git remote -v
        # git remote remove destination || echo "Remote 'destination' not found"
        # git remote add destination https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/HajMichal/GithubActionsTesting
        # git push destination main:main --force
  notify:
    runs-on: self-hosted
    if: ${{ always() }}
    needs: [tests, sync]

    env:
      TRIGGER: ${{ github.event_name }}
      BRANCH: ${{ github.ref_name }}
      WEBHOOK: ${{ secrets.MM_WEBHOOK_URL }}
      WORKFLOW: ${{ github.workflow }}
      ACTION: ${{ github.event.head_commit.message }}
      ACTION_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      REPO: ${{ github.repository }}
      REPO_URL: ${{ github.server_url }}/${{ github.repository }}
      USER: ${{ github.triggering_actor }}
      USER_URL: ${{ github.server_url }}/${{ github.triggering_actor }}
      TESTS_RESULT: ${{ needs.tests.result }}
      SYNC_RESULT: ${{ needs.sync.result }}
    steps:
      - name: Notify to Mchat
        if: always()
        uses: CODE-Actions/8398a7-action-slack@v3
        with:
            status: custom
            fields: job,took
            custom_payload: |
                {
                  attachments: [{
                    color: '${{ needs.tests.result }}' === 'success' && '${{ needs.sync.result }}' === 'success'  ? 'good' : 'danger',
                    text: `
                    \n**Action: **[${process.env.TRIGGER}](${process.env.ACTION_URL})\n**By:** [${process.env.USER}](${process.env.USER_URL})\n**Branch:** ${process.env.BRANCH}\n**Repo:** [${process.env.REPO}](${process.env.REPO_URL})\n**Tests: ** ${process.env.TESTS_RESULT}\n**Synchronization: ** ${process.env.SYNC_RESULT}`
                  }]
                }
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.MM_WEBHOOK_URL }}

# jobs:
# on:
#   push:
#env:
#  SAMPLE_VAR: This is sample variable

#   test:
#     runs-on: self-hosted 
#     steps:
#     - name: Display variable
#       run: echo "${{ github.actor }}"
      
#   # przetestowac github.ref

#   # Job name
#   build:
#     runs-on: self-hosted
#     outputs:
#       output1: ${{ steps.passvar.outputs.test }}
#     # Sequence of tasks that will be executed
#     steps:

#       - name: Display variable
#         run: echo "VARIABLE---> $SAMPLE_VAR"
      
#       - id: "passvar"
#         run: echo "test=hello" >> "$GITHUB_OUTPUT"

#         # Debug message
#       - name: Run a debug message
#         run: echo "::debug::Here is your debug message"
        
#         # # Error
#       - name: Run an error
#         run: echo "::error file=main.tsx, line=10::Missing semicolon"

#       - name: The demo step has failed
#         if: ${{ failure() && steps.demoTest.conclusion == 'failure' }}
#         run: echo "workflow failed ${{ steps.demoTest }}"

#       # Runs a single command
#       - name: Run a one-line script
#         run: echo "Hello, world!"

#       # Runs a set of commands
#       - name: Run a multi-line script
#         run: |
#           echo "Add other actions to build,"
#           echo "test, and deploy your project."

#       - name: The job has succeeded
#         if: ${{ success() }}
#         run: echo "workflow succeeded" 


#   dump_contexts_to_log:
#     runs-on: self-hosted
#     needs: build
#     steps:
#       - name: "Use variable from build job"
#         env:
#           OUTPUT1: ${{needs.build.outputs.example}}
#         run: echo "$OUTPUT1"
#       - name: Dump GitHub context
#         env:
#           GITHUB_CONTEXT: ${{ toJson(github) }}
#         run: echo "$GITHUB_CONTEXT"
#       - name: Dump job context
#         env:
#           JOB_CONTEXT: ${{ toJson(job) }}
#         run: echo "$JOB_CONTEXT"
#       - name: Dump steps context
#         env:
#           STEPS_CONTEXT: ${{ toJson(steps) }}
#         run: echo "$STEPS_CONTEXT"
#       - name: Dump runner context
#         env:
#           RUNNER_CONTEXT: ${{ toJson(runner) }}
#         run: echo "$RUNNER_CONTEXT"
#       - name: Dump strategy context
#         env:
#           STRATEGY_CONTEXT: ${{ toJson(strategy) }}
#         run: echo "$STRATEGY_CONTEXT"
#       - name: Dump matrix context
#         env:
#           MATRIX_CONTEXT: ${{ toJson(matrix) }}
#         run: echo "$MATRIX_CONTEXT"
